services:

  backend:
    # For pure local development use build:
    build:
      context: .
    # For CI/CD pipelines, comment out build: above and uncomment image: line below
    # image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    restart: always
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - SENTRY_DSN=${SENTRY_DSN}
      - PYTHONUNBUFFERED=1
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8000:8000"
    # Notice: No explicit depends_on as Prisma migrations run separately
    # Backend will retry connecting until Postgres is ready
    
  # Database service required for the sample DATABASE_URL in .env.example
  db:
    image: postgres:15
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:

